---
title: TDD, Continued
homework: 1) Read RORT Chapter 7 and do warmups; 2) Weekly update
desc: We continue on TDD from the previous class
cat: testing
---
<%= homework_hdr %>

1. <%= partbadge %> <%= pdfbadge %> <%= teambadge %> **Teams: Codeship**: Get your app deployed onto [CodeShip](http://www.codeship.com). Log in with the email of the github account who owns the offical team repository. The documentation of CodeShip is quite good. Make sure you have at least one rails integration test to run whenever someone onbEnsure that whenever the team pushes to your master branch, the tests are automatically run and if they pass, the result is pushed out to Heroku. <%= team_deliverable "Submit the text of the log generated by Codeship to demonstrate that it is working." %>
1. <%= partbadge %> Our second AMA ("Ask Me Anything") with [Imran Qidway of Intel](https://www.linkedin.com/in/iqidwai/).Research everything you can find about Imran, his interests, his career, his views, and post two questions that you would want to ask him during the interview here: [Imran Qidwai AMA Questions](https://moodle2.brandeis.edu/mod/forum/discuss.php?d=350620)

##### Ongoing Work
* **Teams**: Continue working on your projects!

##### Interesting, optional reading
* [Ruby Debugging Magic](http://www.schneems.com/2016/01/25/ruby-debugging-magic-cheat-sheet.html)
* [MiniTest Cookbook](https://chriskottom.com/minitestcookbook/)
* <a href="/content/topics/documents/cheatsheets.pdf">Minitest Cheat Sheet</a>

#### Today
* "Ask Me Anything" With Imran Qidwai
* Let's review <%= link_to_intro :term_project %>
* Break into groups
  * Brainstorm on the necessary tests to validate a class called `Money`
    * Represents amounts of money (analogy: Rational or Angle) in differrent currencies
    * Does arithmatic on money: addition, subtraction, multiplication
    * Including combining money of different currencies
    * Instances of Money can be converted to any currency
  * Break into groups of 4 students (I will do this)
  * At end I will ask each group to provide one test idea that hasn't been mentioned yet
  * E.g. "Check that multiplying a Money object by zero always will produce zero units", etc.

#### TDD Continued

* <%= link_to_topic :testing_pyramid %>
* <%= link_to_topic :testing_reasons %>
* <%= link_to_topic :mocking %>
* <%= link_to_topic :testing_data %>
* <%= link_to_topic :testing_in_rails %>
* <%= link_to_topic :hands_on_rails_test %>

#### Look at next class
* Look at homework <%= link_to_next_lecture %>
