---
title: Scaling with Rails
desc: How does architecture change to accomodate scale?
homework: 1) Weekly team update
cat: advanced
---
<%= homework_hdr %>

<%= include_topic :hw_166_selfknowledge_reflection %>
1. <%= partbadge %> <%= teambadge %> <%= pdfbadge %> **Weekly Team Update:** Submit your <%= link_to_topic :weekly_progress_updates %> according to the instructions. <%= team_deliverable "Weekly Progress Update" %>

##### Ongoing Work
* **Teams**: Continue working on your projects!

##### Interesting, optional reading

* [You Are Not Google](https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb)
* [Why our classes eventually reach 50 columns and hundreds of methods](http://blog.arkency.com/2017/03/why-your-classes-eventually-reach-50-columns-and-hundreds-of-methods/)
* [27 Gems I use in almost every Software As A Service Project](https://hackernoon.com/27-gems-i-use-in-almost-every-project-832986551df8?gi=147e3a4a808e)
* [100ms to Glass with Rails and Turbolinks](https://www.nateberkopec.com/2015/05/27/100-ms-to-glass-with-rails-and-turbolinks.html)
* [Feature Toggles](http://martinfowler.com/articles/feature-toggles.html)
* [Speeding Up Your Rails Applications](https://medium.com/@daniellempesis/speeding-up-your-ruby-on-rails-app-4c37ec71b126)

#### Discussion

<img src="/content/topics/images/understanding.png" class= "img-thumbnail" style="max-width:250px;float:right;" />

* What do you most want to know about Scaling?
* What will stay with you for years, and what will evaporate this afternoon?
* What's the best way to spend the coming hour?

<%= include_topic :scaling %>
<%= include_topic :tuning_scalability %>

#### Look at next class
* Look at homework <%= link_to_next_lecture %>
