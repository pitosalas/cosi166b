---
title: APIs, REST, PUSH
desc: Web Services, how they work, and how to use them
homework: 1) Experiment with REST clients and servers. Report your experiences
cat: advanced
---
<%= homework_hdr %>
**Legend**: <%=partbadge%>: Participation | <%= timebadge %>: Early | <%= pdfbadge %>: PDF | <%=zipbadge %>: Zipped

1. <%= partbadge %> <%= pdfbadge %> **Read and do**: Articles and do steps below:
    * Read this article: [RESTFUl Web Services: A Tutorial](http://www.drdobbs.com/web-development/restful-web-services-a-tutorial/240169069)
    * Look over this tutorial: [Build a Restful JSON APil with Rails 5](https://scotch.io/tutorials/build-a-restful-json-api-with-rails-5-part-one)
    * Download and install this [WebService Demo Code](https://github.com/pitosalas/webservicedemo) to your computer. Look at all the examples and get them to work. Understand what they are doing.
    * Download and install a REST Client app. For example [rest-client](https://code.google.com/p/rest-client/) or [Chrome Advanced Rest Client](https://chrome.google.com/webstore/detail/advanced-rest-client/)
    * Familiarize yourself with one or two real Web Services (also called Web APIs or APIs). Here are some interesting starting points:
      1. Everything known about wine: [Wine.com API](https://api.wine.com)
      1. Open Government Data: [Sunlight Foundation API](http://sunlightfoundation.com/api/)
      1. APIs of cooking recipes: [Yummly](https://developer.yummly.com)
      1. [Reddit API](https://github.com/reddit/reddit/wiki/API)
      1. [US Census Bureau](http://www.census.gov/developers/)
      1. [Weather Information](http://www.wunderground.com/weather/api/)
      1. A huge directory of all kinds of web services: [Programmable Web](http://www.programmableweb.com)
    * Most web services (APIs) need an API-key of some kind (free). Get one
    * Experiment with the REST client and one of the Web services described above
    * Using the REST client app above: try some calls and get them to work
    * <%= deliverable "A post describing your experience. What api you tried and what you learned. And describing one specific way in which your product could use a Web Service API" %>
1. **Read**: [WebSockets and ActionCables](http://www.sitepoint.com/action-cable-and-websockets-an-in-depth-tutorial/?utm_source=rubyweekly&utm_medium=email)
1. <%= partbadge %> <%= teambadge %> <%= pdfbadge %> **Weekly Team Update:** Submit your <%= link_to_topic :weekly_progress_updates %> according to the instructions. <%= team_deliverable "Weekly Progress Update" %>

#### For Further Study
* [Build a JSON API with Rails 5 ](https://scotch.io/tutorials/build-a-restful-json-api-with-rails-5-part-one)
* [Feature Toggles](http://martinfowler.com/articles/feature-toggles.html), and
* [Real Time Rails, WebSockets](https://blog.heroku.com/real_time_rails_implementing_websockets_in_rails_5_with_action_cable)

#### Creating a WEB Service
* Fortune API deployed on Heroku
  * Visit the fortune_api: [Fortune API on Heroku](https://rpsfortune.herokuapp.com/fortune/random)
  * Let's take a look at the code [Restapidemo](https://github.com/pitosalas/restapidemo)

#### Accessing a web service
* Accessing and testing out a Web Api before using it
* Writing throw away code ("spikes")
* Use a gem or build a gem: isolation
* Don't be scared: How to look inside a gem at its code (see gem `gem-open`)
* If the gem doesn't do what you need, look for another one!
* Data conversions are often a challenge
* Discuss the exmples in ruby [Web Service Demo Code](https://github.com/pitosalas/webservicedemo)

#### Web PUSH Capability
* Defined
* Often used in conjunction with AJAX
* Websockets: Why are they needed?
* It's all about SCALE!

<%= include_image "https://heroku-blog-files.s3.amazonaws.com/posts/1473343847-1462551384-websocket-protocol.png" %>

#### Look at next class
* Look at homework <%= link_to_next_lecture %>
