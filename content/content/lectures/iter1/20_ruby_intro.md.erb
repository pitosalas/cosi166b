---
title: Ruby Immersion
desc: See demos of lots of ruby, see Ruby in action, discuss the features of the language
homework: 1) Complete [RTHW] 2) Pick some products you like; 3) Continue working on PA_MOVIES_1
cat: ruby
---
<%= homework_hdr %>

1. <%= zipbadge %> **RTHW:** Complete [Learn Ruby The Hard Way](http://learnrubythehardway.org/book/preface.html) up to exercise 45. Your success in the whole course will be strongly affected by how comfortable you get with Ruby. Itâ€™s a really fun and interesting language. <%= deliverable "Result of Lesson 45 as a .zip file to Latte." %>
1. <%= pdfbadge %> <%= partbadge %> **Products**: Come up with a few product ideas. Just think about what you always wanted in the world. Maybe you already have an idea in mind? Anyway, for inspiration you may look at <%= link_to_topic :product_inspirations %> or anywhere else. It doesn't matter where. Select between one and three that you might want to work on in this class. Remember the caveat: Don't set the bar at "this is the most wonderful product idea I ever saw". Set it at "this is a product that could be interesting to develop and work on." Write up (in 1 or two paragraphs) your favorite product idea(s)! <%= deliverable("Submit your report as a pdf to Latte.") %>
1. **PA_MOVIES_1**: Continue working on PA_MOVIES_1. It is due next class! This assignment will get you to write some basic code with Ruby. You will learn how to read files work with data in arrays and hashes. If you are stuck, ask one of our wonderful TAs for assistance.

#### Intro to Ruby
* Key differences from Java
  * no semicolons
  * optional parentheses around method calls
  * no public static main
  * dynamic typing
* Big concepts
  * Dynamic typing
  * Blocks
  * No compile step
  * gems
  * rake
* Running a program
  * `ruby filename.rb`
  * irb or pry
  * How does ruby handle a multi-file program?
* Aggregates (or collections or containers)
  * Array
  * Hash

#### Product Brainstorm 30 minutes
* Groups of 3-5 students in class
  * Get to know each other a little  
  * Look over results of product review
  * Discuss your favorite product that you proposed or some other student proposed
  * Prepare to explain it to the class in about 1 minute, so not a lot of detail
  * Each group presents one product
  
#### Handy demo files
* <%= link_to_topic :intro_tut %>
* <%= link_to_topic :classes_tut %>
* <%= link_to_topic :inheritance_tut %>

#### Homework Review
* Discuss progress on the ruby work
* Burning questions?

#### Next Class
* Look at homework: <%= link_to_next_lecture %>
