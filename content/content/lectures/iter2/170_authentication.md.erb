---
title: Authentication
desc: How does your app know and validate who is logging in?
homework: 1) Weekly progress report
cat: prod
---
<%= homework_hdr %>

1. <%= partbadge %> <%= teambadge %> <%= pdfbadge %> **Weekly Team Update:** Submit your <%= link_to_topic :weekly_progress_updates %> according to the instructions. <%= team_deliverable "Weekly Progress Update" %>

##### Ongoing Work
* **Project teams:** Although there are no specific deliverables, you should be following <%= link_to_section :intro, :project_roadmap %>. Not just during lab and during your meetings, but on your own. Remember with a team of four (or 3 or 5) students, that's a lot of horsepower, and so we have high expectations. The sooner you kick into gear the better!
* **Rails PA 2** Working on <%= link_to_topic :pa_rails_2 %>. You can see the assigment and due dates here: <%= link_to_topic  :pa_rails_guide %>

### Authentication and Authorization
<%= include_topic :intro_auth %>

#### Possible implementation strategies in Rails
* Roll your own, using simple authentication. My preferred approach for this course.
* Look at other options: [Clearance](https://github.com/thoughtbot/clearance) or [Sorcery]( https://github.com/Sorcery/sorcery),  [Authlogic](http://www.rubydoc.info/github/binarylogic/authlogic), or [Devise](https://github.com/plataformatec/devise)
* Look at GoRails, they have several relevant lessons: [GoRails Authentication](https://gorails.com/episodes/omniauth-twitter-sign-in?autoplay=1)

#### Demos
* <%= link_to_topic :basic_authentication %>
* <%= link_to_topic :clearance_authdemo %>

#### Look at next class
* Look at homework <%= link_to_next_lecture %>
