---
title: Forms and Views
desc: Client and Server interplay for forms and database update.
homework: 1) Continue to work on projects
cat: rails / UIBASIC
---
<%= homework_hdr %>

1.  <%= zipbadge %> **Forms**: Investigate two very popular Form helper gems, [Formtastic](https://github.com/justinfrench/formtastic) and [SimpleForm](https://github.com/plataformatec/simple_form). Challenge yourself to write a nice demo program using one of the two, displaying a very cool form. <%= deliverable "Write a nice Readme explaining what you learned about these two helpers, and which one you prefer. Also include a screenshot of the form screen, and source code, zipped." %>
1. **Watch** [Single Table Ineritance](https://www.driftingruby.com/episodes/single-table-inheritance). This is a very cool technique that allows you to organize a class and subclasses and store them in a relational table. It applies to Rails but is a general technique in Databases. No deliverable
1. **Read** [Working with JavaScript in Rails](http://guides.rubyonrails.org/working_with_javascript_in_rails.html). No deliverable.

##### Ongoing work
* **Teams**: Continue working on your projects! You should be more or less around **UIBASIC**
* **Rails PA 3**: Continue working on <%= link_to_topic :pa_rails_3 %>, which will be due on October 30. As usual, remember, these can be hard so please, don't wait till the last minute!

##### Interesting, optional reading
* [Rails 5.1 form_with vs. form_tag vs. form_for](https://m.patrikonrails.com/rails-5-1s-form-with-vs-old-form-helpers-3a5f72a8c78a)
* [Nested Forms Demo](https://www.youtube.com/watch?v=0kHBIttrxVg)


#### Discussion
* How was Rails PA 2?
* Shall we devote the 'lab on Friday to a full walkthrough of a solution?
* Would you like a chance to resubmit?

<%= include_topic :how_forms_view_work %>

#### If you want to experiment, here's a script

* Demo: <%= link_to_topic :hands_on_forms_demo %>

#### Look at next class
* Look at homework <%= link_to_next_lecture %>
